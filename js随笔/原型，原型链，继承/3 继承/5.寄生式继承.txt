思想：与原型式继承思路紧密相关，类似于原型式继承浅拷贝一个对象后，通过创建一个函数，并          在函数内部对浅拷贝后的对象进行增强（添加方法），再返回这个对象。

感觉寄生式继承依赖于原型式继承的思路（主要是对象的浅拷贝）：
    原型式继承是浅拷贝对象后，将拷贝出的对象添加到自定义的子类型prototype上，再由子类型实例化对象出来
    寄生式继承是浅拷贝对象后，直接使用拷贝出的对象，并对其增强后使用

function createAnother(o) {
    var clone = Object.create(o);     // 浅拷贝对象
    clone.sayHi = function() {....};     // 对象增强
    return clone;
}

缺点：
是在原型式继承的基础上，对返回对象做增强，优缺点首先和原型式继承一样
其次，增强的方法定义在返回的实例上，和借用构造函数继承一样，每次创建对象都会创建一遍方法，浪费资源