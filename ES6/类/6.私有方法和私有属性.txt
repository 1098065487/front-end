私有方法和私有属性，即只能在类内部访问的方法和属性，外部不能访问，有利于代码的封装
在传统的面向对象语言中，一般使用访问修饰符来控制私有，private
js没有提供访问修饰符，所以不支持，ts倒是支持访问修饰符修饰属性和方法，达到私有化的效果

js处理私有，目前都只是变通方法模拟实现：
1）命名区别：使用下划线_在方法前表示方法私有（不保险）
2）将私有方法移出模块：类内部定义的方法中调用类外部的方法，具体实现在外部，并且类内部的      方法调用时，使用.call(this, )，绑定类的this为外部函数调用主体，从而实现私有
3）利用Symbol值的唯一性，将私有方法的名字命名为一个Symbol值（也是不保险的）
    （es6 Symbol内容，待整理）

私有化的提案：
在方法或属性前，使用#，只能在类内部使用this.#count这种形式调用私有属性