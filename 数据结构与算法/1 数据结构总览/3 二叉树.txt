1.概念：
二叉树是节点度数不超过2的树，是树的一种特殊子集
二叉树这种被限制的树结构，却能够表现和实现所有的树，背后的原理是长子+兄弟法

2.二叉树的特殊概念：
1）真二叉树（所有节点的度数只能是0或2）
2）二叉堆
        堆其实是一种优先级队列，在很多语言中都有对应的内置数据结构，但js中没有
    1》最小堆（min heap），任意子节点的key或value大于等于其父节点的对应值，堆顶元素一定         是最小的，可以求最小值和第k小的值
    2》最大堆（max heap），任意子节点的key或value小于等于其父节点的对应值

  关于运用二叉堆获取动态列表中位数的算法原理：
        1.将有序列表分成两个堆，最小堆从中间数到有序列表末尾，最大堆从中间数到有序列表开头
        2.每加入一个数据，根据二叉堆特性，移动加入数据的位置，保证最小堆的数据都大于最大堆             ，且最大堆最多比最小堆多一个，最小堆最多和最大堆数量相等。
        3.二叉堆特性：左右子节点编号分别为：(父节点编号 * 2) +1 和 (父节点编号 * 2) +2
                              父节点的编号为：(当前节点编号 - 1) / 2
        4.解释下，2其实就是优先队列的思路，Priority Queue，新值入队时，作为叶子节点，和父节		点比较，小则交换，直至不能再交换为止，顶值出队时，由队尾值补上，队尾值和其叶	子节点较小值比较，大则交换，直至不能再交换为止（最小堆）

  关于二叉堆的应用：
        二叉堆的应用主要是在最小堆和最大堆的使用，比如利用最大堆取倒序排序，最小堆取顺序排序（两者都是通过堆顶不断出堆操作实现的），利用最大最小堆取中位数
    最大最小堆的操作：
        1.按最大最小堆格式化数组，一般取最后一个数据的父节点，下标(length-1)/2，倒序到根节              点，下标0，使父子节点间满足规则，注意在交换值后，可能继续往上干扰其上层父节点
        2.最大最小堆的入堆，当新值加入堆，只需要保证其父节点及交换值后上层父节点都满足规则             即可
        3.最大最小堆的出堆，值出堆，都是由堆顶出，出堆后，末尾值补上堆顶，并继续规则化，即           从根节点开始，保证父子节点及交换值后下层父子节点否满足规则
此三项，即为保证最大最小堆应用的基本操作

3）二叉查找树（也叫二叉排序树，二叉搜索树）
    特性：
        1.左子树不空，则左子树所有节点值均小于他的根节点值
        2.右子树不空，则右子树所有节点值均大于他的根节点值
        3.左右子树也是二叉查找树
        4. 没有键值相等的节点
    常规操作：插入，查找，删除，找父节点，求最大值，求最小值
    常使用的二叉查找树的特性：其中序遍历的结果是一个顺序数组（此特性重要）

4）二叉平衡树
平衡树是一类数据结构，是一种改进的二叉查找树，二叉查找树的查询复杂度取决于目标结点的深度，当节点深度普遍较大时，查询均摊复杂度上升，为了高效的查询，产生了平衡树。
平衡指所有叶子节点的深度趋于平衡，广义指树上所有可能查找的均摊复杂度偏低。
    一些数据库引擎内部就用这种数据结构，目标是将查询操作降到log n（树的深度），简单理解为    ：树在数据结构层面构造了二分查找算法

    基本操作：旋转，插入，删除，查询前驱，查询后继

    分类：
        1.AVL树：最早的自平衡二叉查找树，在AVL中，任一节点对应两颗子树的最大高度差为1，因此也叫高度平衡树，查找、插入和删除在平均和最坏的情况下，时间复杂度都为O(log n)，增加和删除元素操作可能需要一次或多次旋转，以实现树的重新平衡，节点定义了平衡因子这个参数，为左子树减去右子树高度（树的根节点高度为0），根据平衡因子不在-1，0，1之间的，需要重新平衡。
        2.红黑树：由最开始被发明的对称二叉B树演变而来，结构复杂，但对操作有着良好的最坏情况运行时间，在实践中高效，可以在O(log n)时间内完成查找，插入和删除

5）字典树（前缀树）
又称Trie树，是一种树型结构，典型应用是用于统计，排序和保存大量的字符串（但不限于字符串），所以经常被搜索引擎系统用于文本词频统计，优势是：利用字符串的公共前缀来减少查询时间，最大限度的减少无谓的字符串比较，查询效率比哈希树高。
基本性质：
    1.根节点不包含字符，除根节点外每个节点都只包含一个字符
    2.从根节点到某一结点，路径上经过的字符连接起来，为该节点对应的字符串
    3.每个节点的所有子节点包含的字符都不相同






