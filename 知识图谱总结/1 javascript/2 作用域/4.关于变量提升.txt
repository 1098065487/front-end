ES5有一个特点，就是函数和变量的状态提升，同时这也是引发很多不合理场景的源头
ES6引入let和const，一个明显的特点就是，限制了变量的状态提升

但是let和const有一个特点，在块级作用域使用了let或const，会产生一个临时死区，意味着这个区域内在使用被let和const修饰的变量时，不会向上查找，仅在此作用域下查找，这个产生的效果有点类似状态提升，但官方给的解释就叫暂时死区，要记住

var a = 1;
(function() { console.log(a) })();           // 打印1

var a = 1;
(function() { console.log(a); let a = 2; })();       // 报错，a未初始化
这个就属于暂时性死区，不叫变量提升