1.原理：
使用原型链继承来保证子类继承父类型的原型对象
使用构造继承来保证子类继承父类型的实例属性和方法（自身属性和方法）

2.操作概述：
1）通过apply或call在子类型构造中调用父类型构造函数
2）将子类型构造的原型对象指向父类型的实例（一般是匿名实例）
3）修正子类型构造函数原型对象的constructor指向，指向子类型构造函数
   （这一步是所有修改原型对象指向后，都要考虑的一项操作）

3.优点：综合了原型链继承和构造继承的优点
1）既继承了父类的实例属性和方法，又继承了父类原型的属性和方法
2）避免了父类型引用类型在实例中状态共享的问题
3）可以在子类中向父类型构造传参

4.缺点：
1）使用组合继承，父类构造函数会被调用两次（影响性能）
2）调用两次父类构造，会生成两个实例，但实际，原型链继承的父类实例，在组合继承中并没有用，只是继承其上的原型对象，增加了不必要的内存
