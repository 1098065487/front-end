1.内置类型
基本类型：null, undefined, boolean, number, string, symbol
引用类型：object
object中比较重要的内置引用类型：
    object子类型：Function, Array, Date, RegExp
    基本包装类型：Boolean, Number, String

2.使用typeof去检查类型时，一般会返回对应的类型字符串，但是有两个特例：
1）typeof null === 'object'
2）typeof [函数] === 'function'

3.值和址，内存空间上的变量对象
简单理解，js在作用域内，定义的变量其实在内存空间上也是一个对象，变量对象的值可以是基本类型或引用类型（值或址）
可以理解变量对象是存在于作用域或者说执行上下文的所有变量的集合（执行上下文内容多于作用域）

4.强制类型转换
类型转换发生在静态类型语言的编译阶段(如java)，发生在动态类型语言的运行时

5.== 和 === 的理解
以前理解==检查值是否相等，===检查值和类型是否相等
但实际上，正确理解：
==允许在比较中进行强制类型转换，而===不允许