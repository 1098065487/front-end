1.单列布局：（header，content，footer）有两种情况：
1）header，content，footer等宽
2）header，footer等宽，content略窄

2.两列自适应布局：一列由内容撑开，另一列撑满剩余宽度的布局
1）float + overflow: hidden
普通两列，对左侧元素添加float和margin-right即可，自适应两列布局，对父元素添加BFC，左侧仍是float和margin-right，右侧也是添加bfc，触发bfc一般使用overflow: hidden，兼容IE写法：zoom: 1
2）flex布局：父元素使用flex布局，右侧子元素添加margin-left和flex: 1，也就是右侧大小自适应
3）grid布局

3.三栏布局：中间列自适应宽度，旁边两侧固定宽度
1）圣杯布局：很多情况下，要求三栏布局的dom结构先写中间部分，以达到优先加载中间列
步骤：
1>三部分都设置左浮动，中间部分设置宽度100%
2>两边设置margin-left负值，使左右两边位置位于左右两侧，-100%和-右侧宽度px
3>父容器设置padding-left和padding-right，使左右两边空出
4>对左右两边设置相对定位，left和right，使左右部分移动到两边
缺点：
1>中间部分的最小宽度不能小于左侧部分，否则左侧部分会掉到下一行
2>三部分高度互不相关，任一部分高度拉长，其他部分不会自动填充

2）双飞翼布局：在圣杯布局基础上优化，解决布局错乱问题，实现内容和布局的分离
步骤：
1>三部分都设置左浮动，中间部分设置宽度100%
2>两边设置margin-left负值，使左右两边位置位于左右两侧，-100%和-右侧宽度px
3>center部分增加一个内层div，设置margin: 0 左右侧宽度px;
缺点：多增加一层dom节点，增加了渲染树的生成计算量

两种三栏布局对比：
1>两种布局都是把主列放在文档流最前面，使主列优先加载
2>两种布局在实现上也有相似，都是让三列浮动，然后通过外边距margin形成三列布局
3>处理中间主列位置，两种布局不同，圣杯布局是利用左右内边距padding+相对定位，让两边定位，双飞翼布局是将主列嵌套在一个新的div中，利用主列外边距margin进行布局调整

4.等高布局：子元素在父元素中高度相等
1）利用正padding和负margin
可以对三列设置一个很大的padding-bottom，占位，再设置相同大小的负margin-bottom，保证不干扰后面的布局，同时再最外层架上overflow: hidden，隐藏溢出部分，实现等高

2）利用背景图片
对最外层使用背景图片，可以保证占位，实现等高，但实际限制较多，不建议

3）模仿表格布局：兼容性不好，不建议

4）使用边框和定位
将侧边是为主列的border，然后对侧边添加定位，固定位置，看上去border高度代替侧边高度

5.粘连布局
特点：主内容main和底部内容footer，当main高度足够长时，footer跟在main后面，当main内容不够长时，footer粘连在屏幕底部
步骤：
1>footer必须是独立结构，不在main内容内
2>main内容设置min-height为视口高度，保证不够时也能占位
3>footer使用负margin来保证自己在main最小高度时，能出现在底部
4>main被footer负margin遮挡住部分，需设置padding-bottom为同等高度，避免遮挡

