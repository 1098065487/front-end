前端框架是整合的结果，必然会考虑到管理状态（state），如组件间共享状态（父子组件之间，兄弟组件之间），只有进行状态管理了，才能知道状态在什么时候什么原因如何变化了，这对于程序来说是很有必要的。

状态管理的思路：
把组件之间需要共享的状态提取出来，遵循特定的约定，统一管理，让状态的变化可以预测



最简单的实现思路：store模式
最简单的状态管理的实现，就是将状态存到一个外部变量（或者直接全局变量），为组件间所共享

这只是最朴素的想法，直接缺点就是缺少数据变化的变更记录
可以稍微复杂点，在store中不仅仅包含共享的状态数据，并且包含控制变更状态数据的action方法，这样就可以记录状态变更
但是这样还是存在缺陷，因为store并没有限制对state状态的直接修改，还是存在可能的问题，如果添加规定，只能由action去改变state，即执行action来分发（dispatch）事件来触发state变更，这样，就是flux框架的实现思路了