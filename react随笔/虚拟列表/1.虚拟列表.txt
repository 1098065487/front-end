理解：
虚拟列表是根据滚动容器元素的可视区域来渲染长列表数据的一部分的技术，这样仅渲染可视区域的数据而不是整个长列表数据，从而获得数据展示优化

实现：
1.针对定高度元素的长列表
1）数据指标：开始下标，结束下标，缓冲数据量，滚动偏移，顶部偏移，底部偏移
2）思路：可以根据要求计算出界面展示出的数据数量，加上缓冲数据量，为可视数据，永远选取可视数据的第一条作为锚点数据，当监听页面滚动后，滚动发生时，以页面实际滚动偏移和上一次缓存的滚动偏移做比较，滚动偏移位置大于锚点的底部时，即向下滚动了，滚动偏移位置小于锚点的顶部时，即向上偏移了，做锚点数据变化，可视数据变化，并记录滚动偏移，以此往复
3）对于数据的计算，基础是可以获取所有元素的节点位置信息（index, top, bottom）

2.针对不定高度元素的长列表
实现思路与定高度元素的长列表相似，但是在缓存列表项位置信息时，需要拿到列表项的精确高度，还有就是需要给出列表项的预估高度，代替定高度做法中的高度参数，一般预估高度可以选样平均后获得

当长列表中包含图片信息时，会因为图片需要额外的网络请求而获得产生滞后，导致对应节点高度不准确，可能出现重叠现象，可以通过监听组件节点大小的变化获取正确的高度

使用：
虚拟列表技术可以自己去实现，但是更多的会使用现成的组件，比较好的有react-window

在实际使用中，特别是antd集成的虚拟列表表格中，使用体验一般，有很多问题存在，比如render会产生延迟，页面resize或者滚动才会生效第一列后面的render
