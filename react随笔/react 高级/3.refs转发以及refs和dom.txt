ref转发是指将ref自动的通过组件传递到其一子组件的技巧

一般做法都是直接用props来传递ref（props内不存在ref属性，可以定义为其他名称即可传递），这种不是转发，但在某些情况下，转发还是很有用的（比如可重用的组件库）

使用：
（首先理解一下，ref都是父组件创建，传递给子组件或子组件dom，从而操作子组件的）
ref转发可以看作通过某种手段，将ref与props同级传递到子组件（即转发到子组件），从而在组件中可以直接获取子组件的ref，直接使用ref可操作dom
这里的手段一般通过React.forwardRef
（这里说一下，可以通过改名的方式，将ref作为属性通过props传递给子组件，功能类似）

转发ref使用步骤：
1）创建ref，一般使用React.createRef
2）将ref作为属性由父组件向下传递
3）父组件的实现时，通过React.forwardRef，由内函数(props, ref) => {}，传递并使用ref
4）父组件实现中的ref必须传到子组件的dom上
5）在父组件中，可以使用ref.current获取子组件dom
注意：
这里是转发ref的用法，一般用在必须要操作子组件dom的情况，实际更多情况只是父组件要调用子组件的方法之类的功能，直接改名传递ref即可，其实这也就是高阶组件使用ref的方法，不过实际在用的过程中，发现的确不需要再使用React.forward进行转发也可以达到预期效果
可以通过props传递改名的ref：
1.在hook组件中，子组件可以很简单的通过useImperativeHandle暴露ref实例（包括属性和方法）给父组件直接调用，比较简单
2.类组件一般需要父组件定义绑定子组件的this的方法，传给子组件，子组件调用后，即可在父组件中获取子组件的this，从而调用子组件的方法

但是又看到一种说法：
当ref被传递下去后，即可使用
1.当ref用于html元素时，ref接收底层dom元素作为其current属性
2.当ref用于自定义class组件时，ref接收组件的挂载实例作为其current对象，也就是说ref已经指向this了，可以直接使用
当然了，针对于hook函数组件，有自己的绑定方法，不用担心以上理解上的差异

除了使用React.createRef创建ref，还可以通过ref回调函数的形式，创建ref，两者ref绑定的格式都一样，不过回调的形式是在回调中绑定dom或类组件到属性（createRef也需要自定义属性）上