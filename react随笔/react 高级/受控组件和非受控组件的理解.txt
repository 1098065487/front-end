受控组件和非受控组件的概念一般出现在类组件中，因为只有类组件才有state状态

受控组件一般指组件中form元素由value和change事件控制state中的表单元素状态值变化
非受控组件一般指form元素的值仅在使用时由ref之类的方法获取去使用，不加以控制

可以这么理解受控组件，受控组件的form元素都是由state中的value控制值，由表单元素的change事件控制值的变化，两者不断交互影响

仅在提交时提取数据，使用非受控组件会更简单，其他情况下，其实都不建议用非受控组件


**********
通常受控和非受控指表单元素的控制的不同，但是也可以指数据频繁更新的组件
1.由传入的props带来数据的，组件被认为是受控的（自己理解的仅有props数据控制，完全受控）
2.数据只保存在内部state上，非受控组件

比较模糊的一种，自己理解的，不完全受控组件，即由传入的props和自己的状态state共同控制的组件，也可以做，一般会传入onChange方法，将state状态反馈回父组件，修改props，本质应该还是受控组件（这是自己理解的，没有明确定义）
这已经和官方推荐的做法一致了，完全可控组件的做法：不使用state，状态和状态修改都由props传入

**********
实际在使用hook函数组件的时候，就发现这些问题反而不存在了，这也是为什么慢慢就转到仅有hook开发的原因之一了，函数式编程，对于预期的可见，还是很直观的