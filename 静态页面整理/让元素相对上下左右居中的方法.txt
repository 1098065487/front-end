静态页面常见需求，让子元素相对于父元素上下左右完全居中：
针对此需求，在实际中，常用的有几种方式

1）flex布局
1> 在flex布局的父元素中，对子元素添加属性：
	align-items: center; 上下居中
	justify-content: center; 左右居中
此方式针对子元素有多个的情况，可以改变justify-content，能有更好的效果
2> 在flex布局的父元素中，对子元素添加属性：
	margin: auto; 上下左右居中
     flex布局虽然好用，但是可能存在兼容性问题，这也是唯一的遗憾了

2）绝对定位
1> 在父元素相对定位，子元素绝对定位，对子元素添加属性：
	top: 50%; left: 50%; 子元素定位
	transform: translate(-50%, -50%); 子元素在x, y方向偏移
此方法是我在antd pro项目的样式中见过，考虑兼容性，应该是最优的实现方案了，如果子元素有多个的情况，多套一层，在外层定义居中，内层再定义子元素之间的关系
    此方法原理：
	其实就是margin用2D转换替代了
         margin-top: -h/2; margin-left: -w/2; 其实就等价于 transform: translate(-50%, -50%);
2> 在父元素相对定位，子元素绝对定位，对子元素添加属性：
	top: 0; bottom: 0; left: 0; right: 0; 
	margin: auto; 
在绝对定位离四周都为0，但是有高度的情况，margin: auto是使居中


还有其他常见的但是有限制的方法，或者不常用的方法：

3）针对行内元素或行内块元素的居中（inline, inline-block）
设置子元素为行内元素或行内块元素（display: inline-block）
父元素设置行高line-height（一般是父子元素高度和），使子元素上下居中
父元素设置文本居中（text-align: center），使行元素左右居中
	此方法限定子元素为行元素，并不是很友好，用起来可能有问题发生，比较麻烦

不常用的两个方法：
4）利用table的单元格的居中属性vertical-align（上下居中）
父元素外包裹一层，设置为表格元素（display: table）,并设置宽度100%
父元素设置为单元格元素（display: table-cell）,
单元格元素才可以使用vertical-align: middle; 使上下居中
子元素通过margin: 0 auto; 左右居中
	此方法还需要添加父元素嵌套，当仅是修改样式时，无法操作，麻烦

5）相对定位
无视父元素定位，当子元素相对定位时（position: relative），子元素默认起点为左上角
对子元素设置属性： 
	top: 50%;(或者bottom: -50%)   margin-top: -h/2; 上下居中
	left: 50%;(或者right: -50%)   margin-left: -w/2 左右居中
相对定位的做法和绝对定位的做法很像，但是不一样，很容易记混淆，所以干脆只记绝对定位的，也更清晰
不同：相对定位是基于左上角起点的，使用left和top处理及偏移时，和绝对定位一样
涉及bottom和right，相对定位的处理都是负值，绝对定位都是正值
至于偏移，永远是向左和向上偏移1/2宽高，绝对定位倒是会根据选择的处理属性进行偏移

