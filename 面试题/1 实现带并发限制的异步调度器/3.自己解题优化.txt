class Scheduler {
  constructor() {
    this.queue = [];
    this.maxCount = 2;
    this.runCount = 0;
  }
  add(promise) {
    this.queue.push(promise);
    const run = () => {
      if(this.queue.length > 0) {
        this.runCount++;
        const task = this.queue.shift();
        task().then(() => {
          this.runCount--;
          run();
        })
      }
    }
    if(this.queue.length > 0 && this.runCount < this.maxCount) {
      run();
    }
  }
}
const timeout = time => new Promise(resolve => setTimeout(resolve, time));
const scheduler = new Scheduler();
const addTask = (time, order) => {
  scheduler.add(() => timeout(time).then(() => console.log(order)));
}
addTask(1000, 1)
addTask(500, 2)
addTask(300, 3)
addTask(400, 4)
