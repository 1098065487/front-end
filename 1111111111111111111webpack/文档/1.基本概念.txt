webpack本质上是一个现代javascript应用程序的静态模块打包器（module bundler）,webpack处理应用程序时，会递归的构建一个依赖关系图（dependency graph），其中包含应用程序的每个模块，然后将这些模块打包成一个或多个bundle

1.entry：入口
构建项目内部依赖图(dependency graph)的起点，默认./src/index.js，一般是配置entry属性的
可以配置entry，指定一个或多个入口起点（配置的是路径）

2.output：输出
webpack构建输出的结果是一个bundle.js文件，可以配置output属性，规定在哪里输出这个bundle.js文件，如何命名，默认文件为./dist/main.js，默认在./dist文件夹下。

3.loader
webpack自身只能识别解读js和json文件，loader可以让他处理其他类型文件，从而将整个项目模块化，添加到依赖图（如css loader）
loader有两个属性：（成对使用，配置在moudle.rules数组中）
	1）test，配置识别哪些文件
	2）use，配置转换时使用的loader

4.plugin：插件
插件的使用，是为了拓展webpack的能力的，包括：打包优化，资源管理，注入环境变量
使用插件，需要先require()，再把它添加到plugins数组中，一般是添加new创建的插件实例到数组
比如注入js到html的插件HtmlWebpackPlugin

5.mode：模式
选择不同模式，会启用webpack内置的对不同环境的优化，默认值为poduction
可选择development，production，none