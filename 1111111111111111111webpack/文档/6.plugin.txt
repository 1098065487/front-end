1.理解：
插件是webpack的支柱，仔细想想，webpack自身也是构建在 webpack配置中用到的 相同的插件系统之上
插件目的在于解决loader无法实现的其他功能

2.剖析：（看不懂无所谓的，后面再学）
webpack插件是一个具有apply方法的js对象，apply方法会被webpack compiler调用，并且在整个编译生命周期都可以访问compiler对象，下面给一个例子：
const pluginName = 'ConsoleLogOnBuildWebpackPlugin';
class ConsoleLogOnBuildWebpackPlugin {
    apply(compiler) {
        compiler.hooks.run.tap(pluginName, compilation => {
            console.log('webpack 构建过程开始');
        });
    }
}
module.exports = ConsoleLogOnBuildWebpackPlugin;

3.用法和配置
一般是往配置中，加入对plugins的配置，插件实例的数组，如：
plugins: [
  new webpack.optimize.UglifyJsPlugin(),
  new HtmlWebpackPlugin({ template: './src/index.html' })
]